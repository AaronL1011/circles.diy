services:
  circles-diy:
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - "8080"
    environment:
      - PORT=8080
    volumes:
      - ./data:/app/data
      - ./static:/app/static:rw
      - ./templates:/app/templates:ro
    restart: unless-stopped
    tmpfs:
      - /tmp:nosuid,size=100m
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network

  docmost:
    image: docmost/docmost:latest
    depends_on:
      - db
      - redis
    environment:
      APP_URL: "https://docs.${DOCMOST_DOMAIN:-yourdomain.com}"
      APP_SECRET: "${DOCMOST_APP_SECRET}"
      DATABASE_URL: "postgresql://docmost:${DOCMOST_DB_PASSWORD}@db:5432/docmost?schema=public"
      REDIS_URL: "redis://redis:6379"
    expose:
      - "3000"
    restart: unless-stopped
    volumes:
      - docmost_data:/app/data/storage
    networks:
      - app-network

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: docmost
      POSTGRES_USER: docmost
      POSTGRES_PASSWORD: "${DOCMOST_DB_PASSWORD}"
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:7.2-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    restart: unless-stopped
    depends_on:
      - circles-diy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: renew --webroot -w /var/www/certbot --quiet
    profiles:
      - renewal

networks:
  app-network:
    driver: bridge

volumes:
  docmost_data:
    driver: local
  db_data:
    driver: local
  redis_data:
    driver: local